/*
 * Copyright (c) 2023, gaoweixuan (breeze-cloud@foxmail.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ${package}.${moduleName}.controller;

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.breeze.boot.core.utils.Result;
import com.breeze.boot.log.annotation.BreezeSysLog;
import com.breeze.boot.log.enums.LogType;
import ${packageName}.${moduleName}.domain.${className};
import ${packageName}.${moduleName}.params.${className}Param;
import ${packageName}.${moduleName}.query.${className}Query;
import ${packageName}.${moduleName}.service.${className}Service;
import ${packageName}.${moduleName}.vo.${className}VO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import cn.dev33.satoken.annotation.SaCheckPermission;
import org.springframework.web.bind.annotation.*;


import jakarta.validation.constraints.NotNull;
import java.util.Arrays;

/**
 * ${comments}
 *
 * @author ${author}
 * @since ${datetime}
 */
@RestController
@RequiredArgsConstructor
@SecurityRequirement(name = "Bearer")
@RequestMapping("/${moduleName}/${pathName}")
@Tag(name = "${comments}", description = "${className}Controller")
public class ${className}Controller {

    private final ${className}Service ${lowCaseClassName}Service;

    /**
     * 列表
     */
    @Operation(summary = "列表", description = "分页")
    @GetMapping("/list")
    @SaCheckPermission("${moduleName}:${pathName}:list")
    public Result<Page<${className}>> list(${className}Query ${lowCaseClassName}Query) {
        return Result.ok(this.${lowCaseClassName}Service.listPage(${lowCaseClassName}Query));
    }

    /**
     * 信息
     */
    @Operation(summary = "信息")
    @GetMapping("/info/${pk.attrname}")
    @SaCheckPermission("${moduleName}:${pathName}:info")
    public Result<${className}> info(@PathVariable("${pkColumn.attrName}") ${pkColumn.attrType} ${pkColumn.attrName}){
        return Result.ok(this.${className}Service.getById(${pk.attrName}));
    }

    /**
     * 保存
     */
    @Operation(summary = "保存")
    @PostMapping
    @SaCheckPermission("${moduleName}:${pathName}:create")
    @BreezeSysLog(description = "${comments}保存", type = LogType.SAVE)
    public Result<Boolean> save(@RequestBody ${className}Entity ${className}){
        return Result.ok(this.${classname}Service.save(${classname}););
    }

    /**
     * 修改
     */
    @Operation(summary = "修改")
    @PutMapping
    @SaCheckPermission("${moduleName}:${pathName}:modify")
    @BreezeSysLog(description = "${comments}修改", type = LogType.EDIT)
    public Result<Boolean> update(@RequestBody ${className}Entity ${className}){
        return R.ok(this.${className}Service.updateById(${classname}););
    }

    /**
     * 删除
     */
    @Operation(summary = "删除")
    @DeleteMapping
    @SaCheckPermission("${moduleName}:${pathName}:delete")
    @BreezeSysLog(description = "${comments}删除", type = LogType.DELETE)
    public R delete(@RequestBody ${pkColumn.attrType}[] ${pkColumn.attrName}s){
        return R.ok(this.${className}Service.removeByIds(Arrays.asList(${pkColumn.attrName}s)););
    }

}
