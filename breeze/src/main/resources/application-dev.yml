spring:
  redis:
    host: ${BREEZE_REDIS_HOST:breeze-redis}
    port: ${BREEZE_REDIS_PORT:6379}
    password: ${BREEZE_REDIS_PASSWORD:breeze}
  # 数据源配置
  datasource:
    dynamic:
      # 默认数据源，默认master
      primary: master
      # 严格匹配数据源,默认false. true未匹配到指定数据源时抛异常,false使用默认数据源
      strict: false
      # 数据库连接信息配置
      datasource:
        # 主库
        master:
          url: jdbc:mysql://${BREEZE_MYSQL_HOST:breeze-mysql}:${BREEZE_MYSQL_PORT:3366}/${BREEZE_MYSQL_DB_NAME:breeze}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: ${BREEZE_MYSQL_USERNAME:root}
          password: ${BREEZE_MYSQL_PASSWORD:root}
          type: com.alibaba.druid.pool.DruidDataSource
        # 从库
        slave:
          url: jdbc:mysql://${BREEZE_MYSQL_SLAVE_HOST:breeze-slave-mysql}:${BREEZE_MYSQL_SLAVE_PORT:3366}/${BREEZE_MYSQL_SLAVE_DB_NAME:breeze_slave}?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: ${BREEZE_MYSQL_SLAVE_USERNAME:root}
          password: ${BREEZE_MYSQL_SLAVE_PASSWORD:root}
          type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 10
      max-active: 20
      max-wait: 60000
      min-evictable-idle-time-millis: 300000
      time-between-eviction-runs-millis: 50000
      # 配置插件：stat-监控统计，日志，wall-防火墙（防止SQL注入），
      # ps：去掉后，监控界面的sql无法统计
      filters: stat,wall
      # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效
      validation-query: SELECT 1
      # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能
      test-on-borrow: true
      # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能
      test-on-return: true
      # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能
      test-while-idle: true
      # 过滤慢sql
      filter:
        stat:
          db-type: mysql
          # 开启 FilterStat，默认true
          enabled: true
          # 开启 慢SQL 记录，默认false
          log-slow-sql: true
          # 是否是慢SQL，默认 3000ms
          slow-sql-millis: 5000
          # 合并多个连接池的监控数据，默认false
          merge-sql: false
        wall:
          db-type: mysql
          config:
            multi-statement-allow: true
      # 开启StatViewServlet
      stat-view-servlet:
        enabled: true
        reset-enable: false
        allow: 127.0.0.1
        url-pattern: /druid/*
        login-username: ${BREEZE-DRUID-USERNAME:admin}
        login-password: ${BREEZE-DRUID-PASSWORD:admin}
        deny:
      # 配置WebStatFilter，用于采集web关联监控的数据
      web-stat-filter:
        # 开启监控
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 1000

  mail:
    host: smtp.exmail.qq.com
    port: 465
    username: 123@qq.com
    password: 123
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          socketFactoryClass: javax.net.ssl.SSLSocketFactory
        debug: true
    from-address: 123@qq.com

# mybatis-plus 配置
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  global-config:
    banner: true
    db-config:
      id-type: auto
      select-strategy: not_empty
      insert-strategy: not_empty
      update-strategy: not_empty
  configuration:
    jdbc-type-for-null: null
    # 逻辑删除
    db-config:
      logic-delete-field: flag  # 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    # mybatis-plus配置控制台打印完整带参数SQL语句
    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 搜索指定包别名
  typeAliasesPackage: com.breeze.**.entity

breeze:
  wx:
    app-id: wx269d15f14a5fc7e2
    app-secret: 273950b557912864a8627ff5ff9db82b
  oss:
    local:
      enable: true
      path: /usr/local/breeze/files/
      nginxHost: http://localhost:9000/img
    minio:
      enable: true
      bucket-name: breeze
      endpoint: http://localhost:9090
      access-key: admin
      secret-key: admin123
      nginx-host: http://localhost:9090/img
