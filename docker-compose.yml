version: '3'
services:
  # 数据库
  breeze-mysql:
    build:
      context: ./docker/db
    container_name: breeze-mysql
    hostname: breeze-mysql
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./docker/mysql/conf/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/data/:/var/lib/mysql
      - ./docker/mysql/logs:/var/log/mysql
      - /etc/localtime:/etc/localtime:ro
    command:
      # 可以配置在mysql的 my.cnf 中
      --default-authentication-plugin=mysql_native_password
    privileged: true
    networks:
      - breeze-net

  # 文档数据库
  breeze-mongodb:
    image: mongo:latest
    container_name: breeze-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123.
    volumes:
      - ./docker/mongodb_data:/data/db
    privileged: true
    networks:
      - breeze-net

  breeze-es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: breeze-es01
    environment:
      - node.name=breeze-es01
      - cluster.name=es-cluster
      - discovery.type=single-node  # 单机模式
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # 根据内存调整
      - xpack.security.enabled=false  # 开发环境禁用安全认证
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./docker/es/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    privileged: true  # 解决权限问题（开发环境适用）

  # 向量数据库
  breeze-qdrant:
    image: qdrant/qdrant
    container_name: breeze-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant-data:/qdrant/storage
    restart: always
    networks:
      - breeze-net
  # redis
  breeze-redis:
    image: redis:7.2.5
    container_name: breeze-redis
    hostname: breeze-redis
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./docker/redis/conf/redis.conf:/etc/redis/redis.conf
      - ./docker/redis/data/:/data
      - ./docker/redis/logs/:/logs
      - /etc/localtime:/etc/localtime:ro
    command:
      redis-server /etc/redis/redis.conf
    privileged: true
    networks:
      - breeze-net

  # rabbitMq服务
  breeze-rabbitmq:
    image: rabbitmq:3.10.25-management
    container_name: breeze-rabbitmq
    hostname: breeze-rabbitmq
    ports:
      - "4369:4369"
      - "15672:15672" # client端通信口
      - "5672:5672" # 管理界面ui端口
      - "25672:25672" # server间内部通信口
    volumes:
      - ./docker/rabbitmq/data:/var/lib/rabbitmq
      - ./docker/rabbitmq/conf.d:/etc/rabbitmq/conf.d
      - ./docker/rabbitmq/log:/var/log/rabbitmq/log
    #环境变量
    environment:
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: 123456
    privileged: true
    restart: always
    networks:
      - breeze-net

  breeze-minio:
    container_name: breeze-minio
    image: minio/minio:RELEASE.2024-01-18T22-51-28Z
    hostname: breeze-minio
    ports:
      - "9092:9092" # api端口
      - "9091:9091" # 控制台端口
    environment:
      MINIO_ACCESS_KEY: admin     #管理平台用户名
      MINIO_SECRET_KEY: 12345678    #管理平台密码
      TZ: Asia/Shanghai
    volumes:
      - ./docker/minio/data:/data
      - ./docker/minio/config:/root/.minio/
      - /etc/localtime:/etc/localtime:ro
    command: server --console-address ':9091' --address ':9092' /data  #指定容器中的目录 /data
    privileged: true
    restart: always
    networks:
      - breeze-net

  breeze-boot-satoken-oauth-server:
    build:
      context: ./breeze-boot
    restart: always
    container_name: breeze-boot-satoken-oauth-server
    ports:
      - "9000:9000"
    volumes:
      - ./docker/logs:/usr/local/boot/logs
      - /etc/localtime:/etc/localtime:ro
    hostname: breeze-boot
    image: breeze-boot-satoken-auth-server
    depends_on:
      - breeze-minio
      - breeze-mysql
      - breeze-redis
    networks:
      - breeze-net

  breeze-monitor:
    build:
      context: ./breeze-monitor
    restart: always
    ports:
      - "10000:10000"
    volumes:
      - ./docker/logs:/usr/local/boot/logs
      - /etc/localtime:/etc/localtime:ro
    container_name: breeze-monitor
    hostname: breeze-monitor
    image: breeze-monitor
    depends_on:
      - breeze-boot
    networks:
      - breeze-net

  breeze-job-admin:
    container_name: breeze-job-admin
    hostname: breeze-job-admin
    image: xuxueli/xxl-job-admin:2.2.0
    environment:
      TZ: Asia/Shanghai
      PARAMS: "--spring.datasource.url=jdbc:mysql://breeze-mysql:3306/breeze_xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
       --spring.datasource.username=root
       --spring.datasource.password=root"
    volumes:
      - ./docker/xxljob/applogs:/data/applogs
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "18080:8080"
    restart: on-failure
    privileged: true
    networks:
      - breeze-net

networks:
  breeze-net:
    # 如果要创建外部隔离的覆盖网络，您可以将此internal选项设置为true
    external: true
